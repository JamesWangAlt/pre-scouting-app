// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id        Int     @id @default(autoincrement())
  key       String
  name      String  @unique
  eventName String
  district  String?
  type      String

  year      Int
  startDate String

  city String?

  teams TeamEntry[]
}

model Team {
  number Int    @id
  key    String @unique

  name       String?
  rookieYear Int?
  state      String?
  school     String?

  teamEntries       TeamEntry[]
  historicalEntries HistoricalEntry[]
}

model TeamEntry {
  id  Int    @id @default(autoincrement())
  key String

  name   String?
  status String  @default("notStarted") // "notStarted" | "inProgress" | "completed"

  threatGrade         String?
  threatGradeModified Boolean @default(false)

  wins   Int?
  ties   Int?
  losses Int?

  worldRank     Int?
  worldTotal    Int
  countyRank    Int?
  countyTotal   Int
  districtRank  Int?
  districtTotal Int
  eventRank     Int?
  eventTotal    Int

  autoEPA    Float?
  teleopEPA  Float?
  endgameEPA Float?
  totalEPA   Float?

  autoDeviation    Float @default(0)
  teleopDeviation  Float @default(0)
  endgameDeviation Float @default(0)
  totalDeviation   Float @default(0)

  notes String @default("[{\"children\":[{\"text\":\"\"}],\"type\":\"p\"}]")

  matchEntries MatchEntry[]

  Team       Team?  @relation(fields: [teamNumber], references: [number])
  teamNumber Int?
  Event      Event? @relation(fields: [eventId], references: [id])
  eventId    Int?
}

model HistoricalEntry {
  id   Int @id @default(autoincrement())
  year Int

  notes String @default("[{\"children\":[{\"text\":\"\"}],\"type\":\"p\"}]")

  Team       Team? @relation(fields: [teamNumber], references: [number])
  teamNumber Int?
}

model MatchEntry {
  id Int @id @default(autoincrement())

  notes String @default("[{\"children\":[{\"text\":\"\"}],\"type\":\"p\"}]")

  TeamEntry   TeamEntry? @relation(fields: [teamEntryId], references: [id])
  teamEntryId Int?
  Match       Match?     @relation(fields: [matchKey], references: [key])
  matchKey    String?
}

model Match {
  key String @id

  matchNumber    Int
  redScore       Int?
  blueScore      Int?
  scoreBreakdown String?

  videoId String?

  matchEntries MatchEntry[]
}
