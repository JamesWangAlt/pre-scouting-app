// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id        Int     @id @default(autoincrement())
  key       String
  name      String  @unique
  eventName String
  district  String?
  type      String

  year      Int
  startDate String
  endDate   String

  city String?

  updatedAt DateTime @updatedAt

  teams   TeamEntry[]
  matches MatchEntry[]
}

model Team {
  number Int    @id
  key    String @unique

  name       String?
  rookieYear Int?
  state      String?
  school     String?

  teamEntries    TeamEntry[]
  eventTeam      TeamEvent[]
  teamPastSeason TeamPastSeason[]
}

model TeamEntry {
  id  Int    @id @default(autoincrement())
  key String

  name   String?
  status String  @default("notStarted") // "notStarted" | "inProgress" | "completed"

  threatGrade         String?
  threatGradeModified Boolean @default(false)

  wins   Int?
  ties   Int?
  losses Int?

  worldRank     Int?
  worldTotal    Int
  countyRank    Int?
  countyTotal   Int
  districtRank  Int?
  districtTotal Int
  eventRank     Int?
  eventTotal    Int

  autoEPA    Float?
  teleopEPA  Float?
  endgameEPA Float?
  totalEPA   Float?

  autoDeviation    Float @default(0)
  teleopDeviation  Float @default(0)
  endgameDeviation Float @default(0)
  totalDeviation   Float @default(0)

  notes String @default("[{\"children\":[{\"text\":\"\"}],\"type\":\"p\"}]")

  matchEntries MatchEntry[]

  Team       Team?  @relation(fields: [teamNumber], references: [number])
  teamNumber Int?
  Event      Event? @relation(fields: [eventId], references: [id])
  eventId    Int?
}

model TeamEvent {
  id       Int    @id @default(autoincrement())
  eventKey String

  name      String
  location  String
  eventType String
  endDate   String

  rank       Int?
  totalTeams Int?
  wins       Int
  ties       Int
  losses     Int

  qualified      Boolean
  eliminatedAt   String?
  status         String? // "eleminated" | "won"
  allianceNumber Int?
  alliancePick   Int?

  awards String[]

  Team       Team? @relation(fields: [teamNumber], references: [number])
  teamNumber Int?
}

model TeamPastSeason {
  id   Int @id @default(autoincrement())
  year Int

  winrate Float

  rank       Int
  totalTeams Int

  epa        Float
  percentile Float

  Team       Team? @relation(fields: [teamNumber], references: [number])
  teamNumber Int?
}

model MatchEntry {
  id Int @id @default(autoincrement())

  totalEPA   Float
  autoEPA    Float
  teleopEPA  Float
  endgameEPA Float

  status String
  notes  String @default("[{\"children\":[{\"text\":\"\"}],\"type\":\"p\"}]")

  startedScouting Boolean @default(false)
  record          Boolean @default(false)

  autoAmpScores     Int     @default(0)
  autoSpeakerScores Int     @default(0)
  leftStartingZone  Boolean @default(false)
  centerLineNote    Boolean @default(false)

  teleopAmpScores     Int      @default(0)
  teleopSpeakerScores Int      @default(0)
  pickupFrom          String[] @default([]) // ("source" | "ground")[]

  finalStatus String  @default("notAttempted") // "parked" | "onstage" | "attemptedAndFailed" | "notAttempted"
  trap        Boolean @default(false)

  driverSkill  String  @default("average") // "effective" | "average" | "notEffective"
  defenceSkill String  @default("average") // "effective" | "average" | "notEffective"
  speed        String  @default("average") // "fast" | "average" | "slow"
  noteStuck    Boolean @default(false)
  noteDrop     Boolean @default(false)
  breakage     Boolean @default(false)
  immobilized  Boolean @default(false)
  tippy        Boolean @default(false)

  TeamEntry   TeamEntry? @relation(fields: [teamEntryId], references: [id])
  teamEntryId Int?
  Match       Match?     @relation(fields: [matchKey], references: [key])
  matchKey    String?
  Event       Event?     @relation(fields: [eventId], references: [id])
  eventId     Int?
}

model Match {
  key      String @id
  eventKey String

  startTime Int

  matchNumber Int
  compLevel   String // "qm" | "ef" | "qf" | "sf" | "f"

  winningAlliance String // "red" | "blue" | ""
  scoreBreakdown  String

  redScore     Int
  redTeamKeys  String[]
  blueScore    Int
  blueTeamKeys String[]

  videoId String?

  matchEntries MatchEntry[]
}
